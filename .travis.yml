language: java

jdk: openjdk8

cache:
  directories:
  - .autoconf
  - $HOME/.m2

services: docker

branches:
  only: master

before_install:
  - chmod +x mvnw
  
script:
  # BUILD
  - ./mvnw package -B

  # GET NAME
  - PRJ_GROUP=$(mvn help:evaluate -Dexpression=project.groupId | egrep -v '^\[')
  - PRJ_NAME=$(mvn help:evaluate -Dexpression=project.artifactId | egrep -v '^\[')
  - PRJ_VERSION=$(mvn help:evaluate -Dexpression=project.version | egrep -v '^\[')

  - echo "## PROJECT_GROUP - ${PRJ_GROUP}"
  - echo "## PROJECT_NAME - ${PRJ_NAME}"
  - echo "## PROJECT_VERSION - ${PRJ_VERSION}"

  - PRJ_JAR=${PRJ_NAME}-${PRJ_VERSION}.jar

  # DOCKER BUILD
  - docker build -t nwms.standard:latest --build-arg JAR_FILE=target/${PRJ_JAR} ./

  # PUSH TO DOCKER HUB
  - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
  - docker tag nwms.standard:latest cain0605/nwms.standard:latest
  - docker tag nwms.standard:latest cain0605/nwms.standard:${TRAVIS_JOB_NUMBER}

  - docker push cain0605/nwms.standard:latest
  - docker push cain0605/nwms.standard:${TRAVIS_JOB_NUMBER}
  - docker push cain0605/nwms.standard
  
after_success:
  - mvn clean test jacoco:report coveralls:report
  
notifications:
  slack:
    rooms:
      - cain0605:uT682ndCB9pOlZOTRX6wI0oV#management

before_deploy:
  - zip -r nwms.standard *
  - mkdir -p deploy
  - mv nwms.standard.zip deploy/nwms.standard.zip
  
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: nwms-deploy
    region: us-west-2
    skip_cleanup: true
    acl: public_read
    wait-until-deployed: true
    on:
      repo: cain0605/nwms.standard
      branch: master